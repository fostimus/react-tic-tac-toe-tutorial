{"ast":null,"code":"var _jsxFileName = \"/home/dfoster/Development/projects/tic-tac-toe-tutorial/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i, j) {\n    return React.createElement(Square, {\n      value: this.props.squares[i][j],\n      onClick: () => this.props.onClick(i, j),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    let board = [];\n    let i;\n\n    for (i = 0; i < 3; i++) {\n      let row = [];\n      let j;\n\n      for (j = 0; j < 3; j++) {\n        row.push(this.renderSquare(i, j));\n      }\n\n      board.push(React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, row));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, board);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(3).fill(Array(3).fill(null))\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i, j) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i][j]) {\n      return;\n    }\n\n    console.log(squares);\n    squares[0][1] = this.state.xIsNext ? 'X' : 'O';\n    console.log(squares);\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const description = move ? 'Go to move #' + move : 'Go to game start'; //const position = '( ' + row + ' , ' + col + ' )';\n\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, description));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: (i, j) => this.handleClick(i, j),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, moves)));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  var endIndex = 3 - 1;\n  var firstDiagonalCheck = [];\n  var secondDiagonalCheck = [];\n\n  for (let i = 0; i < 3; i++) {\n    var columnCheck = [];\n    var rowCheck = [];\n\n    for (let j = 0; j < 3; j++) {\n      columnCheck.push(squares[i][j]);\n      rowCheck.push(squares[j][i]);\n    }\n\n    if (columnCheck.every(v => v === columnCheck[0])) {\n      return columnCheck[0];\n    }\n\n    if (rowCheck.every(v => v === rowCheck[0])) {\n      return rowCheck[0];\n    }\n\n    firstDiagonalCheck.push(squares[i][i]);\n    secondDiagonalCheck(squares[i][endIndex - i]);\n  }\n\n  if (firstDiagonalCheck.every(v => v === firstDiagonalCheck[0])) {\n    return firstDiagonalCheck[0];\n  }\n\n  if (secondDiagonalCheck.every(v => v === secondDiagonalCheck[0])) {\n    return secondDiagonalCheck[0];\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 164\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/dfoster/Development/projects/tic-tac-toe-tutorial/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","j","squares","render","board","row","push","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","handleClick","slice","current","length","calculateWinner","console","log","setState","concat","jumpTo","step","winner","moves","map","move","description","status","endIndex","firstDiagonalCheck","secondDiagonalCheck","columnCheck","rowCheck","every","v","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props){\n    return (\n      <button className=\"square\" \n      onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n}\n\nclass Board extends React.Component {\n\n  renderSquare(i, j) {\n    return (\n    <Square \n    value={this.props.squares[i][j]} \n    onClick={() => this.props.onClick(i, j)}\n    />\n    );\n  }\n\n  \n\n  render() {\n\n    let board = [];\n    let i;\n    for (i = 0; i < 3; i++) {\n\n      let row = [];\n      let j;\n      for (j = 0; j < 3; j++) {\n        row.push(this.renderSquare(i, j));\n      }\n      board.push(<div className=\"board-row\">{row}</div>);\n    }\n\n    return (<div>{board}</div>);\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props); \n    this.state = {\n      history: [{\n        squares: Array(3).fill(Array(3).fill(null)),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i, j) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i][j]) {\n      return;\n    }\n    console.log(squares);\n    squares[0][1] = this.state.xIsNext ? 'X' : 'O';\n        console.log(squares);\n\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) { \n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const description = move ? 'Go to move #' + move : 'Go to game start';\n      //const position = '( ' + row + ' , ' + col + ' )';\n      return (\n      <li key={move}>\n        <button onClick={() => this.jumpTo(move)}>{description}</button>\n      </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n          squares={current.squares}\n          onClick={(i, j) => this.handleClick(i, j)}\n          />\n\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n\n  var endIndex = 3 - 1;\n  var firstDiagonalCheck = [];\n  var secondDiagonalCheck = [];\n\n  for (let i = 0; i < 3; i++) {\n\n    var columnCheck = [];\n    var rowCheck = [];\n\n    for (let j = 0; j < 3; j++) {\n      columnCheck.push(squares[i][j]);\n      rowCheck.push(squares[j][i]);\n    }\n\n    if ( columnCheck.every( v => v === columnCheck[0]) ) {\n      return columnCheck[0];\n    }\n    if ( rowCheck.every( v => v === rowCheck[0]) ) {\n      return rowCheck[0];\n    }\n\n    firstDiagonalCheck.push(squares[i][i]);\n    secondDiagonalCheck(squares[i][endIndex - i]);\n  }\n\n  if ( firstDiagonalCheck.every( v => v === firstDiagonalCheck[0]) ) {\n      return firstDiagonalCheck[0];\n  }\n  if ( secondDiagonalCheck.every( v => v === secondDiagonalCheck[0]) ) {\n      return secondDiagonalCheck[0];\n  }\n\n  return null;\n}\n\n// ========================================\n\n ReactDOM.render(\n   <Game />,\n     document.getElementById('root')\n     );\n\n\n"]},"metadata":{},"sourceType":"module"}